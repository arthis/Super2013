
EasyNetQ.Hosepipe.exe
=====================

The EasyNetQ queue management utility

Usage:

	EasyNetQ.Hosepipe.exe <command> [<option:value> ..]

Commands
	dump	Dump all the messages in a queue to the given directory
	insert	Insert all the messages in a directory in the given queue
	err	Dump all the EasyNetQ error messages to the given directory
	retry	Retry any EasyNetQ error messages in the given directory
	?	Output this usage message

Options
	s	the RabbitMQ broker (server) to connect to. Default is 'localhost'
	v	the virtual host. Default is '/'
	u	the username to connect with. Default is 'guest'
	p	the password to connect with. Default is 'guest'
	q	the queue name to take messages from, or publish them to.
	o	the directory to output messages to. Default is current directory.

Examples
	
	1. To output all the messages in a queue called 'my_queue' as text files 
	   to a directory 'C:\temp\messages':

	EasyNetQ.Hosepipe.exe dump s:localhost u:guest p:guest q:my_queue o:C:\temp\messages

	2. To insert all the messages in directory 'C:\temp\messages' into queue
	   'my_queue':
	
	EasyNetQ.Hosepipe.exe insert s:localhost u:guest p:guest q:my_queue o:C:\temp\messages

	3. Dump all the EasyNetQ messages queued in the broker localhost to a directory
	   'C:\temp\messages'

	EasyNetQ.Hosepipe.exe err s:localhost o:C:\temp\messages

	4. An EasyNetQ error message contains all the information required to republish the
	   errored message. 
	   To re-publish all error messages in directory 'C:\temp\messages':

	EasyNetQ.Hosepipe.exe retry s:localhost u:guest p:guest o:C:\temp\messages

Notes

	Neither of the commands 'dump' and 'err' remove messages from queues, they simply
	iterate the queue and copy the messages to the given directory, leaving the original 
	messages on the queue. Take care when retrying error messages that you purge the error 
	queue first (using the RabbitMQ management interface), because if the messages fail 
	again, they too will result in new error messages being published to the error queue 
	and it is possible that	duplicate messages could be created.

	Insert is not safe. It is very easy to publish messages of the wrong type to a
	queue. This can result in unexpected errors in subscribers. Always take care that
	the message you are inserting in a queue is the correct type. EasyNetQ.Hosepipe
	names message files on disk after the queue they are retrieved from, so typically
	you would want to insert them back onto the same named queue.


<#@ assembly name="D:\Projects\Super2013\Framework\DSL\GenerationDTO.Core\bin\Debug\Super.DSL.GenerationDTO.Core.dll" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ Assembly Name="D:\Projects\Super2013\packages\Newtonsoft.Json.4.5.8\lib\net40\Newtonsoft.Json.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Super.DSL.GenerationDTO.Core" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ include file="..\GenerationDTO.Events\TBuilderEvent.tt"#>
<#+
void BuildBuilders(DTOWrapper wrapper)
{
#>

using System;
using CommonDomain;
using System.Diagnostics.Contracts;
using CommonDomain.Core.Super.Messaging.ValueObjects;
using <#= wrapper.Namespace #>;
using <#= wrapper.Namespace #>.Builders;

namespace <#= wrapper.Namespace #>.Builders
{

<#+
	foreach (var evt in wrapper.Objects)
	{
		BuildEventBuilder(evt);
    }

#>
}

<#+
	   int index=0;
	int indexTotal=0;
	   int nTime=1;
	   string namespaceLeft =wrapper.Namespace;
	   while( indexTotal<wrapper.Namespace.Length && nTime<4)
       {
		   
		   index =  namespaceLeft.IndexOf('.');
		   if (index==-1) break;
		   indexTotal += index+1; 
		   namespaceLeft = namespaceLeft.Substring(index+1);
		   nTime ++ ;
       }
	   var @namespace = wrapper.Namespace.Substring(0, indexTotal-1);
#>
namespace <#= @namespace #>
{
	public static partial class BuildEvt 
	{
<#+

	foreach (var evt in wrapper.Objects)
	{
	  #>
		  public static <#= evt.Name #>Builder <#= evt.Name #> {get { return new <#= evt.Name #>Builder(); } }
	  <#+
    }

#>
	}
}
<#+


}
#>
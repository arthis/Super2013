
<#@ assembly name="D:\Projects\Super2013\Framework\DSL\GenerationDTO.Core\bin\Debug\Super.DSL.GenerationDTO.Core.dll" #>
<#@ import namespace="Super.DSL.GenerationDTO.Core" #><#+

void BuildCtor(ObjectDTO cmd)
{
	var name = cmd.Name;
	var ctorArgs =string.Empty;
	foreach (var property in cmd.Properties)
    	ctorArgs += string.Format(",{0} {1}",property.Type, property.GetCamelCasedName());
	#>


		public <#= name #> ()
		{
			//for serialisation
		}


		public <#= name #>(Guid id, Guid commitId<#= ctorArgs #>)
		   : base(id,commitId)
		{
		<#+
	foreach (var property in cmd.Properties)
        {
			
			foreach(string requirement in property.GetRequires())
            {#>
	<#= requirement #>

<#+
            }
        }

	foreach (var property in cmd.Properties)
        {#>
			<#= property.GetPascalCasedName() #> = <#= property.GetCamelCasedName() #> ;
<#+         }#>
		}
	     

		public <#= name #>(Guid id, Guid commitId, long version<#= ctorArgs #>)
		   : base(id,commitId,version)
		{
		<#+
	foreach (var property in cmd.Properties)
        {
			
			foreach(string requirement in property.GetRequires())
            {#>
	<#= requirement #>

<#+
            }
        }

	foreach (var property in cmd.Properties)
        {#>
			<#= property.GetPascalCasedName() #> = <#= property.GetCamelCasedName() #> ;
<#+         }#>
		}

		
		public <#= name #>(Guid id, Guid commitId, DateTime wakeupTime<#= ctorArgs #>)
		   : base(id,commitId,wakeupTime)
		{
		<#+
	foreach (var property in cmd.Properties)
        {
			
			foreach(string requirement in property.GetRequires())
            {#>
	<#= requirement #>

<#+
            }
        }

	foreach (var property in cmd.Properties)
        {#>
			<#= property.GetPascalCasedName() #> = <#= property.GetCamelCasedName() #> ;
<#+         }#>
		}

		public <#= name #>(Guid id, Guid commitId, Guid userId<#= ctorArgs #>)
		   : base(id,commitId,userId)
		{
		<#+
	foreach (var property in cmd.Properties)
        {
			
			foreach(string requirement in property.GetRequires())
            {#>
	<#= requirement #>

<#+
            }
        }

	foreach (var property in cmd.Properties)
        {#>
			<#= property.GetPascalCasedName() #> = <#= property.GetCamelCasedName() #> ;
<#+         }#>
		}


		public <#= name #>(Guid id, Guid commitId, long version, DateTime wakeupTime<#= ctorArgs #>)
		   : base(id,commitId,version,wakeupTime)
		{
		<#+
	foreach (var property in cmd.Properties)
        {
			
			foreach(string requirement in property.GetRequires())
            {#>
	<#= requirement #>

<#+
            }
        }

	foreach (var property in cmd.Properties)
        {#>
			<#= property.GetPascalCasedName() #> = <#= property.GetCamelCasedName() #> ;
<#+         
		}
		
		#>
		}

		
		public <#= name #>(Guid id, Guid commitId, long version, Guid userId<#= ctorArgs #>)
		   : base(id,commitId,version,userId)
		{
		<#+
	foreach (var property in cmd.Properties)
        {
			
			foreach(string requirement in property.GetRequires())
            {#>
	<#= requirement #>

<#+
            }
        }

	foreach (var property in cmd.Properties)
        {#>
			<#= property.GetPascalCasedName() #> = <#= property.GetCamelCasedName() #> ;
<#+         
		}
		
		#>
		}
	<#+
}

#>
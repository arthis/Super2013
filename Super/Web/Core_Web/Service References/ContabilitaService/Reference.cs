//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Super.Contabilita.Commands.TipoIntervento.Ambiente;
using Super.Contabilita.Commands.TipoIntervento.Rotabile;
using Super.Contabilita.Commands.TipoIntervento.RotabileInManutenzione;

namespace Core_Web.ContabilitaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContabilitaService.ICommandWebService")]
    public interface ICommandWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandWebService/Execute", ReplyAction="http://tempuri.org/ICommandWebService/ExecuteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Super.Contabilita.Commands.Lotto.UpdateLotto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Super.Contabilita.Commands.Lotto.CreateLotto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Super.Contabilita.Commands.Lotto.DeleteLotto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UpdateTipoInterventoAmb))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeleteTipoInterventoAmb))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UpdateTipoInterventoRot))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeleteTipoInterventoRot))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreateTipoInterventoRotMan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UpdateTipoInterventoRotMan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeleteTipoInterventoRotMan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreateTipoInterventoAmb))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreateTipoInterventoRot))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Super.Contabilita.Commands.Impianto.DeleteImpianto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Super.Contabilita.Commands.Impianto.CreateImpianto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Super.Contabilita.Commands.Impianto.UpdateImpianto))]
        CommandService.ExecuteResponse Execute(CommonDomain.Core.CommandBase command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandWebServiceChannel : Core_Web.ContabilitaService.ICommandWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandWebServiceClient : System.ServiceModel.ClientBase<Core_Web.ContabilitaService.ICommandWebService>, Core_Web.ContabilitaService.ICommandWebService {
        
        public CommandWebServiceClient() {
        }
        
        public CommandWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommandService.ExecuteResponse Execute(CommonDomain.Core.CommandBase command) {
            return base.Channel.Execute(command);
        }
    }
}
